---
- hosts: all
  become: true
  remote_user: root

  tasks:
  - name: install common packages for all distros (stage 1)
    package:
      update_cache=yes
      state=latest
      name={{item}}
    with_items:
    - bridge-utils
    - git
    - iotop
    - links
    - lvm2
    - mdadm
    - mlocate
    - net-tools
    - psmisc
    - python-crypto
    - python-requests
    - runc
    - wget

  - name: install epel channel for rhel/centos/fedora
    yum:
      name:  "{{ packages }}"
      state: present
      update_cache:  yes
    vars:
      packages:
        - epel-release
    when: (ansible_facts['distribution'] == "CentOS" ) or
          (ansible_facts['distribution'] == "RHEL" )

  - name: install common packages for ubuntu/deb
    apt:
      name:  "{{ packages }}"
      state: present
      update_cache:  yes
    vars:
      packages:
        - dnsutils
        - multipath-tools
        - network-manager
        - open-iscsi
        - python3-crypto
        - python3-requests
        - sg3-utils
    when: (ansible_facts['distribution'] == "Ubuntu" ) or
          (ansible_facts['distribution'] == "Debian" )

  - name: install docker package for ubuntu
    apt:
      name:  "{{ packages }}"
      state: present
      update_cache:  yes
    vars:
      packages:
        - docker.io
    when: (ansible_facts['distribution'] == "Ubuntu" )

  - name: install docker package for debian
    apt:
      name:  "{{ packages }}"
      state: present
      update_cache:  yes
    vars:
      packages:
        - docker
    when: (ansible_facts['distribution'] == "Debian" )

  - name: install common packages for rhel/centos/fedora
    yum:
      name:  "{{ packages }}"
      state: present
      update_cache:  yes
    vars:
      packages:
        - autofs
        - bind-utils
        - device-mapper-multipath
        - iscsi-initiator-utils
        - net-tools
        - nfs-utils
        - python34
        - python34-crypto
        - python34-requests
        - sg3_utils
    when: (ansible_facts['distribution'] == "CentOS" ) or
          (ansible_facts['distribution'] == "RHEL" )

  - name: install common packages for all distros (stage 2)
    package:
      update_cache=yes
      state=latest
      name={{item}}
    with_items:
    - htop
    - jq
