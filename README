#!/bin/bash

set -a

[[ ! -f /data/vdc/vdc.env ]] && {
    echo "Error : /data/vdc/vdc.env not found"
    exit 0
}

. /data/vdc/vdc.env

# network config
echo sudo nmcli c show
echo sudo nmcli d show

BRIDGE_LIST=${BRIDGE_LIST:-"prd hb1 hb2"}

# delete network config
typeset -i i=0
for bridge in $BRIDGE_LIST
do
    echo sudo nmcli c del bridge-br-$bridge
    echo sudo nmcli c del dummy-dummy$i
    echo sudo ip link del dummy$i
    let i=$i+1
done

# create network config

OSVCLAB_SUBNET=${OSVCLAB_SUBNET:-"10.B.C.D"}

# OSVCLAB_CLUSTER_IDX can go up to 255
OSVCLAB_CLUSTER_IDX=${OSVCLAB_CLUSTER_IDX:-"30"}

# to add new clusters id, update OSVCLAB_CLUSTER_IDX to the target value, and generate the commands
# WARNING : to apply new ips, you just need to execute the 2 commands below
# 1/ sudo nmcli c mod bridge-br-$bridge ipv4.method manual ipv4.addresses ..............list of ips..............
# 2/ sudo nmcli c up bridge-br-$bridge

typeset -i cpt=0
for bridge in $BRIDGE_LIST
do
    echo ----- bridge $bridge ----
    echo sudo nmcli c add type dummy ifname dummy$cpt con-name dummy-dummy$cpt
    echo sudo nmcli c mod dummy-dummy$cpt ipv4.method disabled
    echo sudo nmcli c add type bridge ifname br-$bridge con-name bridge-br-$bridge
    echo sudo nmcli c mod bridge-br-$bridge bridge.stp no
    echo sudo nmcli c mod dummy-dummy$cpt connection.master br-$bridge connection.slave-type bridge
    ## echo sudo nmcli c mod bridge-br-$bridge ipv4.method manual ipv4.addresses 192.168.10$cpt.1/24
    typeset -i idx=0
    ipstring=""
    netA=$(echo $OSVCLAB_SUBNET | awk -F'.' '{print $1}')
    while [[ $idx -lt $OSVCLAB_CLUSTER_IDX ]]
    do
        ipstring="$ipstring,$netA.$idx.$cpt.1/24"
        let idx=$idx+1
    done
    ipstring=$(echo $ipstring | sed -e 's/^,//')
    echo sudo nmcli c mod bridge-br-$bridge ipv4.method manual ipv4.addresses $ipstring
    echo sudo nmcli c up bridge-br-$bridge
    echo sudo nmcli c up dummy-dummy$cpt
    let cpt=$cpt+1
done


# sudo nmcli c add type ethernet ifname enp0s31f6 con-name enp0s31f6
# sudo nmcli c mod enp0s31f6 connection.master br-prd connection.slave-type bridge

# zpool create
echo zpool create -f data /dev/disk/by-id/wwn-0x5000c500a8f5c148 
echo zpool add data cache /dev/disk/by-id/nvme-eui.0025385571b178e8-part3
echo zpool add data log /dev/disk/by-id/nvme-eui.0025385571b178e8-part4
echo zfs create data/vdc
echo zfs set canmount=noauto data/vdc
echo mount -t zfs data/vdc /data
echo "cd /data & git clone git+ssh://opensvc@www.opensvc.com/home/opensvc/vdc"

# libvirt pool create
echo mkdir -p /data/vdc/pool

# repos
echo sudo apt install yum-utils createrepo
echo sudo mkdir -p /data/vdc/share/repos/centos/7/{base,centosplus,extras,updates}
echo sudo mkdir -p /data/vdc/share/repos/epel/7
echo sudo mkdir -p /data/vdc/share/repos/elrepo/7
echo cd /data/vdc/share/repos
echo sudo reposync --config=/data/vdc/share/repos/yum/yum.conf --plugins --repoid=base \
  --newest-only --delete --downloadcomps --download-metadata \
  --download_path=/data/vdc/share/repos/centos/7/
echo sudo reposync --config=/data/vdc/share/repos/yum/yum.conf --plugins --repoid=extras \
  --newest-only --delete --downloadcomps --download-metadata \
  --download_path=/data/vdc/share/repos/centos/7/
echo sudo reposync --config=/data/vdc/share/repos/yum/yum.conf --plugins --repoid=updates \
  --newest-only --delete --downloadcomps --download-metadata \
  --download_path=/data/vdc/share/repos/centos/7/
echo sudo reposync --config=/data/vdc/share/repos/yum/yum.conf --plugins --repoid=epel \
  --newest-only --delete --downloadcomps --download-metadata \
  --download_path=/data/vdc/share/repos/epel/7/
echo sudo reposync --config=/data/vdc/share/repos/yum/yum.conf --plugins --repoid=elrepo \
  --newest-only --delete --downloadcomps --download-metadata \
  --download_path=/data/vdc/share/repos/elrepo/7/
echo sudo createrepo /data/vdc/share/repos/centos/7/base/ -g comps.xml
echo sudo createrepo /data/vdc/share/repos/centos/7/extras/
echo sudo createrepo /data/vdc/share/repos/centos/7/updates/
echo sudo createrepo /data/vdc/share/repos/epel/7/
echo sudo createrepo /data/vdc/share/repos/elrepo/7/

# provision lab vm
echo cd /data/vdc/build/lab
echo vagrant up --no-parallel

# unprovision lab vm
echo cd /data/vdc/build/lab
echo vagrant destroy

# vagrant/vbox survival guide
# ----------------------
# vagrant up --debug &> vagrant.log
# vboxmanage showvminfo vm-name
# vboxmanage list hdds      # liste les disques de la database vagrant
# vboxmanage closemedium disk eb42735a-980c-4da5-9ae4-95c5ff48b1bb --delete  # retire un disque de la database vagrant
