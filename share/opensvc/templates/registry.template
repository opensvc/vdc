[DEFAULT]
app = INFRA
env = PRD
rollback = false

[volume#1]
name = {svcname}-data
size = 4g

[ip#0]
type = netns
ipdev = br-prd
ipname = {env.ipname}
netmask = {env.netmask}
gateway = {env.gateway}
netns = container#0

[container#0]
type = docker
image = google/pause
rm = true

[container#1]
type = docker
image = busybox
rm = true
detach = false
netns = container#0
volume_mounts = {volume#1.name}:/volume /data:/data:ro
entrypoint = /bin/sh
run_command = -c 'test -d /volume/data || (mkdir /volume/data; cp -a /data/opensvc/registry/nginx /data/opensvc/registry/registry /volume/data)'
start_timeout = 2m

[container#2]
type = docker
image = distribution/registry:master
rm = true
netns = container#0
volume_mounts = /etc/localtime:/etc/localtime:ro
	{volume#1.name}/data/registry/data:/var/lib/registry
	{volume#1.name}/data/registry/certs:/certs
	{volume#1.name}/data/registry/conf/config.yml:/etc/docker/registry/config.yml
run_args = -e REGISTRY_HTTP_ADDR=localhost:5000
	-e REGISTRY_HTTP_HOST=https://{env.ipname}
	-e REGISTRY_HTTP_SECRET={svcname}2016
	-e REGISTRY_AUTH=token
	-e REGISTRY_AUTH_TOKEN_REALM=https://{env.collector}/init/registry/token
	-e REGISTRY_AUTH_TOKEN_SERVICE="registry"
	-e REGISTRY_AUTH_TOKEN_ISSUER="opensvc"
	-e REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE=/certs/server.crt
	-e REGISTRY_STORAGE_DELETE_ENABLED=true
	-e SSL_TRUST={env.collector}:443

[container#3]
type = docker
image = nginx
rm = true
netns = container#0
volume_mounts = /etc/localtime:/etc/localtime:ro
	{volume#1.name}/data/nginx/conf/nginx.conf:/etc/nginx/conf.d/default.conf
	{volume#1.name}/data/nginx/conf/ssl:/etc/nginx/ssl

[task#gc]
type = docker
image = distribution/registry:master
rm = true
command = garbage-collect /etc/docker/registry/config.yml
blocking_pre_run = {svcmgr} -s {svcname} stop --rid container#3
post_run = {svcmgr} -s {svcname} start --rid container#3
schedule = @1d
run_requires = container#2(up)
netns = container#0
volume_mounts = /etc/localtime:/etc/localtime:ro
	{volume#1.name}/data/registry/data:/var/lib/registry
	{volume#1.name}/data/registry/certs:/certs
	{volume#1.name}/data/registry/conf/config.yml:/etc/docker/registry/config.yml

[env]
ipname = 192.168.100.8
netmask = 24
gateway = 192.168.100.1
collector = 192.168.100.9
